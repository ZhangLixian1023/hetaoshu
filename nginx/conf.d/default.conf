upstream backend {
    server backend:8000;
}
server {
    server_tokens off; # 关闭服务器版本号
    listen 80;
    server_name hetaoshu.life www.hetaoshu.life 47.113.191.241;  # 替换为你的域名
    
    # 将HTTP请求重定向到HTTPS
    return 301 https://hetaoshu.life$request_uri;
}
server {
    server_tokens off; # 关闭服务器版本号
    listen 443 ssl;
    server_name hetaoshu.life www.hetaoshu.life 47.113.191.241;  # 替换为你的域名
    
    # 配置SSL证书
    ssl_certificate /etc/nginx/ssl/hetaoshu.life.pem;
    ssl_certificate_key /etc/nginx/ssl/hetaoshu.life.key;
    
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 600m;
	
    #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    #表示优先使用服务端加密套件。默认开启
    ssl_prefer_server_ciphers on;
    # 设置最大请求体大小为60M
    client_max_body_size 60M;
    
    # 直接提供媒体文件
    location /media/ {
        alias /home/app/media/;
        expires 30d;
        access_log off;
    }

    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 延长代理超时时间至5分钟(300秒)
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    location /admin/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 延长代理超时时间至5分钟(300秒)
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    location / {
        # 直接提供静态文件
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }
}
